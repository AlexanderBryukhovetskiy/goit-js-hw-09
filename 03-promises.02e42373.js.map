{"mappings":"gfAMAA,EAAA,SAEA,IAAMC,EAAOC,SAASC,cAAc,SAGpC,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAY7BJ,IACGK,MAAK,SAAAC,G,IAAGL,EAAQK,EAARL,SAAUC,EAAKI,EAALJ,MACjBK,QAAQC,IAAI,uBAAwCC,OAAfR,EAAS,QAAYQ,OAANP,EAAM,UAE3DQ,OAAM,SAAAJ,G,IAAGL,EAAQK,EAARL,SAAUC,EAAKI,EAALJ,MAClBK,QAAQC,IAAI,sBAAqCC,OAAfR,EAAS,QAAYQ,OAANP,EAAM,UAIzDL,EAAKc,iBAAiB,SAAUX,G","sources":["src/js/03-promises.js"],"sourcesContent":["//Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\n//Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.\n\n// Для відображення повідомлень користувачеві, замість console.log(), використовуй бібліотеку notiflix.\n\nimport Notiflix from \"notiflix\";\n\nconst form = document.querySelector(\".form\");\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n        \n  } else {\n    // Reject\n\n  }\n}\n\n\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n\n  form.addEventListener(\"submit\", createPromise);\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","then","param","console","log","concat","catch","addEventListener"],"version":3,"file":"03-promises.02e42373.js.map"}