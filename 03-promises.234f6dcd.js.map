{"mappings":"iiBAMA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5BC,YAAa,WACWC,KAAKC,SAAW,GAIpCJ,EAAQ,CAACH,WAAUC,UAGnBG,EAAO,CAACJ,WAAUC,YAEnBA,MAdSO,SAASC,cAAc,yBAkB/BC,iBAAiB,SAE3B,SAAkBC,GAChBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAON,SAASC,cAAc,uBAAuBM,OAC3DC,EAAOF,OAAON,SAASC,cAAc,sBAAsBM,OAC3DE,EAASH,OAAON,SAASC,cAAc,wBAAwBM,OAE5DG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAErDnB,EAAcmB,EAAUL,GACrBM,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,QAAQC,IAAI,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,OAC1DuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCH,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAEvE0B,OAAM,SAAAP,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,QAAQC,IAAI,sBAAuCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,OACzDuB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAqCL,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAGvEY,GAASG,K","sources":["src/js/03-promises.js"],"sourcesContent":["//Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\n//Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.\n\n// Для відображення повідомлень користувачеві, замість console.log(), використовуй бібліотеку notiflix.\n\nimport Notiflix from \"notiflix\";\n\nconst submitBtn = document.querySelector('button[type = submit]');\n\nfunction createPromise(position, delay) {\n    return new Promise ((resolve, reject) => {\n      setTimeout ( () => {\n        const shouldResolve = Math.random() > 0.3;\n\n        if (shouldResolve) {\n          // Fulfill\n          resolve({position, delay});\n        } else {\n          // Reject\n          reject({position, delay});\n        }\n      }, delay);\n  });\n}\n\nsubmitBtn.addEventListener('click', onClick);\n\nfunction onClick (event) {\n  event.preventDefault();\n\n  let delay = Number(document.querySelector('input[name = delay]').value);\n  const step = Number(document.querySelector('input[name = step]').value);\n  const amount = Number(document.querySelector('input[name = amount]').value);\n\n  for (let position = 1; position <= amount; position += 1) {\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","Number","value","step","amount","position1","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.234f6dcd.js.map"}