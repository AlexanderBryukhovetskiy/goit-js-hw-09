{"mappings":"iiBAMA,IAAAA,EAAAC,EAAA,SAGMC,GADOC,SAASC,cAAc,SACtBD,SAASC,cAAc,uBAAuBC,OACtDC,EAAOH,SAASC,cAAc,sBAAsBC,MACpDE,EAASJ,SAASC,cAAc,wBAAwBC,MAExDG,EAAYL,SAASC,cAAc,yBAErCK,EAAS,CAACC,kBAAUC,MAAAT,GAExB,SAASU,EAAcF,EAAUG,GAGzB,IAAMC,EAAgBC,KAAKC,SAAW,GAKtC,OAHAP,EAAOC,SAAWA,EAClBD,EAAOE,MAAQE,EAER,IAAII,SAAS,SAACC,EAASC,GACxBL,EAEFI,EAAQT,GAIRU,EAAOV,MAQnBG,EAAc,EAAG,MACdQ,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MACjBa,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,UAEvEK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARX,SAAUmB,EAAKR,EAALV,MAClBa,EAAAxB,GAASyB,OAAOK,QAAQ,sBAAqCH,OAAfL,EAAS,QAAYK,OAANE,EAAM,UAIvErB,EAAUuB,iBAAiB,SAG3B,WAEE,IAAK,IAAIT,EAAW,EAAGA,GAAYf,EAAQe,GAAY,EACrDV,IACAV,GAASI,K","sources":["src/js/03-promises.js"],"sourcesContent":["//Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\n//Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.\n\n// Для відображення повідомлень користувачеві, замість console.log(), використовуй бібліотеку notiflix.\n\nimport Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name = delay]').value;\nconst step = document.querySelector('input[name = step]').value;\nconst amount = document.querySelector('input[name = amount]').value;\n\nconst submitBtn = document.querySelector('button[type = submit]');\n\nlet object = {position, delay};\n\nfunction createPromise(position, delay) {\n\n     // setTimeout ( () => {\n        const shouldResolve = Math.random() > 0.3;\n\n        object.position = position;\n        object.delay = delay;\n\n        return new Promise ((resolve, reject) => {\n          if (shouldResolve) {\n            // Fulfill\n            resolve(object);\n\n          } else {\n            // Reject\n            reject(object);\n          }\n        })\n\n    //}, delay);\n}\n\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n\nsubmitBtn.addEventListener('click', onClick);\n\n\nfunction onClick () {\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise();\n    delay += step;\n  }\n\n  \n}\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","value","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$object","position","delay","$ce04d3a99e08e73b$var$createPromise","delay1","shouldResolve","Math","random","Promise","resolve","reject","then","param","_$position","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","addEventListener"],"version":3,"file":"03-promises.803498ed.js.map"}