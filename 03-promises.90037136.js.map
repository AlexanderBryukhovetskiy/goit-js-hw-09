{"mappings":"qhBAMA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAApC,MACMC,EAAQF,SAASC,cAAc,uBAAuBE,MACtDC,EAAOJ,SAASC,cAAc,sBAAsBE,MACpDE,EAASL,SAASC,cAAc,wBAAwBE,MAExDG,EAAYN,SAASC,cAAc,yBAEzC,IAAIM,EAAS,C,SAACC,S,MAAUN,GAExB,SAASO,EAAcD,EAAUE,GAGzB,MAAMC,EAAgBC,KAAKC,SAAW,GAKtC,OAHAN,EAAOC,SAAWA,EAClBD,EAAOO,MAAQJ,EAER,IAAIK,SAAS,CAACC,EAASC,KACxBN,EAEFK,EAAQT,GAIRU,EAAOV,MAQnBE,EAAc,EAAG,MACdS,MAAK,EAACV,SAAEA,EAAUM,MAAAK,MACjBC,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAqBd,QAAiBW,UAE/DI,OAAM,EAACf,SAAEA,EAAUM,MAAAU,MAClBJ,EAAAtB,GAASuB,OAAOI,QAAQ,sBAAoBjB,QAAegB,UAI/DlB,EAAUoB,iBAAiB,SAG3B,WAEE,IAAK,IAAIlB,EAAW,EAAGA,GAAYH,EAAQG,GAAY,EACrDC,IACAP,GAASE","sources":["src/js/03-promises.js"],"sourcesContent":["//Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\n//Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.\n\n// Для відображення повідомлень користувачеві, замість console.log(), використовуй бібліотеку notiflix.\n\nimport Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name = delay]').value;\nconst step = document.querySelector('input[name = step]').value;\nconst amount = document.querySelector('input[name = amount]').value;\n\nconst submitBtn = document.querySelector('button[type = submit]');\n\nlet object = {position, delay};\n\nfunction createPromise(position, delay) {\n\n     // setTimeout ( () => {\n        const shouldResolve = Math.random() > 0.3;\n\n        object.position = position;\n        object.delay = delay;\n\n        return new Promise ((resolve, reject) => {\n          if (shouldResolve) {\n            // Fulfill\n            resolve(object);\n\n          } else {\n            // Reject\n            reject(object);\n          }\n        })\n\n    //}, delay);\n}\n\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n\nsubmitBtn.addEventListener('click', onClick);\n\n\nfunction onClick () {\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise();\n    delay += step;\n  }\n\n  \n}\n\n\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","$47d4ff9957288465$var$delay","value","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$object","position","$47d4ff9957288465$var$createPromise","delay1","shouldResolve","Math","random","delay","Promise","resolve","reject","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","addEventListener"],"version":3,"file":"03-promises.90037136.js.map"}